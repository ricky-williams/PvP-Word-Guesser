/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package game;

import javax.swing.JOptionPane;

/**
 *
 * @author Ricky Williams
 */
public class EnterWord extends javax.swing.JFrame {

    
    /** Creates new form EnterWord */
    public EnterWord() {
        setTitle("Word Guesser");  
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeading = new javax.swing.JLabel();
        txtWord = new javax.swing.JTextField();
        txtHint = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lblQ1 = new javax.swing.JLabel();
        lblQ2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHeading.setFont(new java.awt.Font("Garamond", 1, 24)); // NOI18N
        lblHeading.setText("Player 1 (Game Master)");

        btnSubmit.setBackground(new java.awt.Color(0, 0, 0));
        btnSubmit.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("SUBMIT");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblQ1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblQ1.setText("Enter a word:");

        lblQ2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblQ2.setText("Provide a hint:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtWord, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 160, Short.MAX_VALUE)
                        .addComponent(lblHeading)
                        .addGap(161, 161, 161))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtHint, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblQ1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblQ2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblHeading)
                .addGap(36, 36, 36)
                .addComponent(lblQ1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtWord, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblQ2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtHint, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnSubmit)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
      try{
          // checking if word and hint text fields are empty 
        if(txtWord.getText().equals("") && txtHint.getText().equals("")) {
        btnSubmit.disable();
        txtWord.requestFocusInWindow();
        JOptionPane.showMessageDialog(null,"Please enter Word and Hint","Error Message",JOptionPane.WARNING_MESSAGE);
           }
        // checking if word field is empty 
        else if(txtWord.getText().equals("")){
           btnSubmit.disable();
           txtWord.requestFocusInWindow();
        JOptionPane.showMessageDialog(null,"Please enter Word","Error Message",JOptionPane.WARNING_MESSAGE);
           }
          // checking if hint field is empty 
        else if(txtHint.getText().equals("")){
            btnSubmit.disable();
            txtHint.requestFocusInWindow();
        JOptionPane.showMessageDialog(null,"Please enter Hint","Error Message",JOptionPane.WARNING_MESSAGE);
           }
        // checking if word entered has spaces 
        else if(txtWord.getText().contains(" ")){
           btnSubmit.disable();
           txtWord.requestFocusInWindow();
           txtWord.setText("");
        JOptionPane.showMessageDialog(null,"Word cannot contain spaces.","Error Message",JOptionPane.WARNING_MESSAGE);
           }
         //checking if word entered contains numbers
        else if(txtWord.getText().matches(".*[0-9].*")){
        btnSubmit.disable();
           txtWord.requestFocusInWindow();
           txtWord.setText("");
        JOptionPane.showMessageDialog(null,"Word cannot contain numbers.","Error Message",JOptionPane.WARNING_MESSAGE);
        }
          // if not empty close current window, open next window(guessWord)
        else{
        String mm = txtWord.getText();      
        String hint = txtHint.getText();
        new guessWord(mm,hint).setVisible(true);// opening new window (guessWord)
         setVisible(false); // closing current window (startimgScreen);
           }
      }catch(Exception e){
       JOptionPane.showMessageDialog(null,"eroorrr:" + e,"Error Message",JOptionPane.WARNING_MESSAGE);
      }
    }//GEN-LAST:event_btnSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnterWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnterWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnterWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnterWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnterWord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblQ1;
    private javax.swing.JLabel lblQ2;
    private javax.swing.JTextField txtHint;
    private javax.swing.JTextField txtWord;
    // End of variables declaration//GEN-END:variables

}
